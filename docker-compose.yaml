services:

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stts_app_network

  alembic:
    build: .
    command: >
      alembic upgrade head
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - .:/app
    networks:
      - stts_app_network


  celery:
    build: .
    command: >
      celery -A celery_worker:celery worker -l info -E
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379/0
    depends_on:    
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - stts_app_network

  flower:
    build: .
    command: celery -A celery_worker flower --address=0.0.0.0 --port=5555 --broker=redis://redis:6379
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - celery
    volumes:
      - .:/app
    networks:
      - stts_app_network

  web:
    tty: true
    stdin_open: true
    build: .
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - HTTP_PROXY=
      - HTTPS_PROXY=
    depends_on:
      - celery
      - alembic
        #condition: service_healthy
    volumes:
      - .:/app
    command: gunicorn -c gunicorn.conf.py --worker-class eventlet -w 1 run:app
    networks:
      - stts_app_network

  init_password:
    build: .
    command: python password.py  # Запуск скрипта для добавления админа
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - alembic
    networks:
      - stts_app_network
    volumes:
      - .:/app



networks:
  stts_app_network:
    external: true
