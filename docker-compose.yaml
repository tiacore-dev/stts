version: '3.8'

services:
  db:
    image: postgres:13
    ports:
      - "${DATABASE_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 40s  # Увеличьте интервал
      timeout: 20s
      retries: 15  # Увеличьте количество попыток

  alembic:
    build: .
    command: bash -c "alembic upgrade head"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "bash", "-c", "alembic current | grep -q 'head'"]
      interval: 10s
      retries: 5
      timeout: 5s


  web:
    build: .
    ports:
      - "${FLASK_PORT}:5000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: python run.py
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  init_password:
    build: .
    command: python password.py  # Запуск скрипта для добавления админа
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      web:
        condition: service_healthy
    volumes:
      - .:/app

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build: .
    command: celery -A celery_worker:celery worker --loglevel=info
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - .:/app

  flower:
    image: mher/flower
    command: ["celery", "-A", "celery_worker", "flower", "--address=0.0.0.0", "--port=${FLOWER_PORT}"]
    ports:
      - "${FLOWER_PORT}:5555"
    depends_on:
      redis:
        condition: service_healthy
      celery:
        condition: service_started

volumes:
  postgres_data:
