version: '3.8'

services:
  db:
    image: postgres:13
    ports:
      - "${DATABASE_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  alembic:
    build: .
    command: alembic upgrade head
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  web:
    build: .
    ports:
      - "${PORT}:5000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy
      alembic:
        condition: service_started
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: python run.py

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build: .
    command: celery -A celery_worker:celery worker --loglevel=info
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - .:/app

  flower:
    image: mher/flower
    command: ["celery", "-A", "app_celery.celery", "flower", "--address=0.0.0.0", "--port=5555"]
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
      celery:
        condition: service_started

volumes:
  postgres_data:
